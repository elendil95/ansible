---
- name: Create bin home folder
  ansible.builtin.file:
    path: /home/{{ remote_regular_user }}/bin
    state: directory
    owner: "{{ remote_regular_user }}"
    group: "{{ remote_regular_user_group }}"
    mode: "0755"

- name: Copy scripts to home/bin folder
  ansible.builtin.copy:
    src: /home/{{ remote_regular_user }}/GithubRepos/dotfiles/bin/
    dest: /home/{{ remote_regular_user }}/bin/
    owner: "{{ remote_regular_user }}"
    group: "{{ remote_regular_user_group }}"
    mode: "0700"

- name: Allow local user to run some commands without sudo pw, so that scripts will work # If the username is dynamic, im not sure we can use the copy module
  become: true
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/12-{{ remote_regular_user }}
    line: "%wheel ALL=(ALL:ALL) NOPASSWD: /usr/bin/poweroff, /usr/bin/reboot, /usr/bin/shutdown, /usr/bin/systemctl suspend, /usr/bin/systemctl hibernate"
    create: true
    validate: visudo -cf %s
    owner: root
    group: root
    mode: "0440"

- ansible.builtin.debug:
    msg: Created file is called 12-{{ remote_regular_user }}

- name: Delete existing bash files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /home/{{ remote_regular_user }}/.bashrc
    - /home/{{ remote_regular_user }}/.bash_profile
  when: (bash_link.stat.exists) and (not bash_link.stat.islnk)

- name: Delete existing .vimrc
  ansible.builtin.file:
    path: /home/{{ remote_regular_user }}/.vimrc
    state: absent
  when: (vim_link.stat.exists) and (not vim_link.stat.islnk)

- name: Create folders in home if they don't exist
  ansible.builtin.command: xdg-user-dirs-update
  args:
    creates: /home/{{ remote_regular_user }}/Music

- name: Make wallpaper folder
  ansible.builtin.file:
    path: /home/{{ remote_regular_user }}/Pictures/std_wallpapers
    state: directory
    owner: "{{ remote_regular_user }}"
    group: "{{ remote_regular_user_group }}"
    mode: "0700"

- name: Copy over wallpapers
  ansible.builtin.copy:
    src: files/
    dest: /home/{{ remote_regular_user }}/Pictures/std_wallpapers
    owner: "{{ remote_regular_user }}"
    group: "{{ remote_regular_user_group }}"
    mode: "0644"

- name: Copy over Lock Screen background image
  ansible.builtin.copy:
    src: files/meduka_lockscreen.jpg
    dest: /usr/share/backgrounds/meduka_lockscreen.jpg
    owner: root
    group: root
    mode: "0644"

- name: Switch LightDM to use 'Slick' greeter
  ansible.builtin.lineinfile:
    path: /etc/lightdm/lightdm.conf
    regexp: '^#greeter-session='
    line: greeter-session=lightdm-slick-greeter
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Copy over Lock Screen config file
  ansible.builtin.copy:
    src: files/slick-greeter.conf
    dest: /etc/lightdm/slick-greeter.conf
    owner: root
    group: root
    mode: "0644"
  become: true

- name: Create an SSH key for remote regular user
  ansible.builtin.user:
    name: "{{ remote_regular_user }}"
    generate_ssh_key: true
    ssh_key_type: rsa
    ssh_key_bits: 4096
    ssh_key_file: .ssh/id_rsa

- name: Set GIT username for remote regular user # noqa: command-instead-of-module
  ansible.builtin.command: git config --global user.name {{ git_username }}
- name: Set GIT email for remote regular user # noqa: command-instead-of-module
  ansible.builtin.command: git config --global user.email {{ git_email }}
- name: Set GIT Editor # noqa: command-instead-of-module
  ansible.builtin.command: git config core.editor {{ git_editor }}
- name: Set GIT merge-tool # noqa: command-instead-of-module
  ansible.builtin.command: git config --global merge.tool {{ git_mergetool }}
- name: Set GIT diff-tool # noqa: command-instead-of-module
  ansible.builtin.command: git config --global diff.tool {{ git_difftool }}
