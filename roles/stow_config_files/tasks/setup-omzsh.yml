---
- name: Check if zsh file exists
  ansible.builtin.stat:
    path: /home/{{ remote_regular_user }}/.oh-my-zsh
  register: omzsh

- name: Run the script
  ansible.builtin.shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" "" --unattended
  args:
    chdir: /home/{{ remote_regular_user }}
  register: omzsh_output
  when: not omzsh.stat.exists

- name: Clone plugins
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: /home/{{ remote_regular_user }}/.oh-my-zsh/custom/plugins/{{ item.folder_name }}
    clone: true
  loop:
    - { repo: https://github.com/zsh-users/zsh-history-substring-search, folder_name: zsh-history-substring-search }
    - { repo: https://github.com/zsh-users/zsh-syntax-highlighting.git, folder_name: zsh-syntax-highlighting }
    - { repo: https://github.com/softmoth/zsh-vim-mode.git, folder_name: zsh-vim-mode }
  when: not omzsh.stat.exists

- name: Copy zsh configs
  ansible.builtin.copy:
    src: /home/{{ remote_regular_user }}/GithubRepos/dotfiles/oh-my-zsh/.oh-my-zsh/custom/{{ item }}
    dest: /home/{{ remote_regular_user }}/.oh-my-zsh/custom/
    owner: "{{ remote_regular_user }}"
    group: "{{ remote_regular_user_group }}"
    mode: "0644"
    force: true
  with_items:
    - aliases.zsh
    - example.zsh
  when: not omzsh.stat.exists

- name: Change shell for regular user to zsh
  ansible.builtin.command: chsh -s /usr/bin/zsh {{ remote_regular_user }}
  become: true

- name: Check if zshrc exists
  ansible.builtin.stat:
    path: /home/{{ remote_regular_user }}/.zshrc
  register: zsh_link

- name: Delete existing zshrc files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /home/{{ remote_regular_user }}/.zshrc
    - /home/{{ remote_regular_user }}/.zshrc.pre-oh-my-zsh
  when: (zsh_link.stat.exists) and (not zsh_link.stat.islnk)

- name: Stow zshrc
  ansible.builtin.command: stow -v zsh -t /home/{{ remote_regular_user }}
  args:
    chdir: /home/{{ remote_regular_user }}/GithubRepos/dotfiles
  when: not omzsh.stat.exists
