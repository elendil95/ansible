---
- hosts: localhost
  connection: local
  become: true

  tasks:
    - name: get the non-root remote user
      set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"
    - name: Get the principal group for the non-root user
      shell: id -ng {{remote_regular_user }}
      register: main_group
      ignore_errors: True
    - name: set user group as a fact just in case
      set_fact:
        remote_regular_user_group: "{{ main_group.stdout }}"
    - name: update system
      pacman:
        update_cache: true
        upgrade: true
    - name: install very basic packages (vim, git, stow, ssh)
      pacman:
        name: 
          - gvim
          - git
          - stow
          - openssh
        state: latest
        extra_args: --needed --noconfirm

    - name: Create Git folder
      file:
        path: /home/{{ remote_regular_user }}/GithubRepos
        state: directory
        owner: "{{ remote_regular_user }}"
        group: "{{ remote_regular_user_group }}"
        mode: "0755"

    - name: clone dotfiles
      git:
        repo: 'https://github.com/elendil95/dotfiles.git'
        dest: /home/{{ remote_regular_user }}/GithubRepos/dotfiles
        clone: yes
        update: yes
    - name: clone DWM
      git:
        repo: 'https://github.com/elendil95/dwm-build.git'
        dest: /home/{{ remote_regular_user }}/GithubRepos/dwm-build
        clone: yes
        update: yes
    - name: clone st
      git:
        repo: 'https://github.com/elendil95/st-build.git'
        dest: /home/{{ remote_regular_user }}/GithubRepos/st-build
        clone: yes
        update: yes
    - name: clone Dmenu
      git:
        repo: 'https://github.com/elendil95/dmenu-build.git'
        dest: /home/{{ remote_regular_user }}/GithubRepos/dmenu-build
        clone: yes
        update: yes
    - name: clone slStatus
      git:
        repo: 'https://github.com/elendil95/slstatus-build.git'
        dest: /home/{{ remote_regular_user }}/GithubRepos/slstatus-build
        clone: yes
        update: yes

    - name: Create bin home folder
      file:
        path: /home/{{ remote_regular_user }}/bin
        state: directory
        owner: "{{ remote_regular_user }}"
        group: "{{ remote_regular_user_group }}"
        mode: "0755"
    - name: copy scripts to home/ folder
      copy:
        src: /home/{{ remote_regular_user }}/GithubRepos/dotfiles/bin/
        dest: /home/{{ remote_regular_user }}/bin/
        owner: "{{ remote_regular_user }}"
        group: "{{ remote_regular_user_group }}"
        mode: "0700"


    - name: Delete OG bash files
      file:
        path: '{{ item }}'
        state: absent
      with_items:
        - /home/{{ remote_regular_user }}/.bashrc
        - /home/{{ remote_regular_user }}/.bash_profile

    - name: stow in new bashrc
      shell: stow -v bash -t /home/{{ remote_regular_user }}
      args:
        chdir: /home/{{ remote_regular_user }}/GithubRepos/dotfiles
      become: yes
      become_user: "{{ remote_regular_user}}"
      become_method: "su"
